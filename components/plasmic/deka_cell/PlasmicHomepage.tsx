// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5W4T71ZWGdu6kYqLvuuQ3N
// Component: sTLGSA0fcsJWJC

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: E68qrDQCcYGuytT/component
import Section from "../../Section"; // plasmic-import: b0bebQ2q38EEWyq/component
import ValueProp from "../../ValueProp"; // plasmic-import: bjiW3HuNh1M7Jjd/component
import KolomKontak from "../../KolomKontak"; // plasmic-import: yBAyndXdAN/component
import Button from "../../Button"; // plasmic-import: OZSqee0ES_HTq_B/component
import ListItem from "../../ListItem"; // plasmic-import: Rxz1zU5HS7x0VsX/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components"; // plasmic-import: PKldDYkH42/codeComponent
import PriceCard from "../../PriceCard"; // plasmic-import: l-WFqa9E_5r9dDj/component
import ButtonWa from "../../ButtonWa"; // plasmic-import: lC_mwoGu3T/component
import Banner from "../../Banner"; // plasmic-import: rkhq07yXHHVSGVN/component
import Testimonial from "../../Testimonial"; // plasmic-import: CWWLy-BZVd1UXQp/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: AbM8sTfPTZeKgDz/component
import FooterSection from "../../FooterSection"; // plasmic-import: nGsC6Y1BsR3DqYF/component

import { useScreenVariants as useScreenVariantsqHr8XyK5HNLc7Z } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: QHr8XyK5hNLc7Z_/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_deka_cell.module.css"; // plasmic-import: 5W4T71ZWGdu6kYqLvuuQ3N/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: sTLGSA0fcsJWJC/css

import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: G1KExKKDBFUnOuW/icon
import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: kKNkwOGnEhqtvD_/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: -2ZVGvYOMZ7zSX3/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: vO6c7RnrZ5iCKC-/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  tentangsection?: p.Flex<typeof Section>;
  checkpointsSection?: p.Flex<typeof Section>;
  button?: p.Flex<typeof Button>;
  h3?: p.Flex<"h3">;
  address?: p.Flex<"address">;
  embedHtml?: p.Flex<typeof Embed>;
  pricingSection?: p.Flex<typeof Section>;
  shopBannersSection?: p.Flex<typeof Section>;
  img?: p.Flex<typeof p.PlasmicImg>;
  testimonialsSection?: p.Flex<typeof Section>;
  h4?: p.Flex<"h4">;
  callToActionSection?: p.Flex<typeof CallToActionSection>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsqHr8XyK5HNLc7Z()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicHomepage.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__n8Mdj)}
            >
              <div className={classNames(projectcss.all, sty.column___4I2VS)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__f66A7)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fZ6Wq)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tJsUl)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bniHs
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ textDecoration: "underline" }}
                        >
                          {"DekaCell Pekalongan"}
                        </span>
                        <React.Fragment>{"\n"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ textDecoration: "underline" }}
                        >
                          {""}
                        </span>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gmeK
                      )}
                    >
                      {
                        "Servis HP di Pekalongan, memperbaiki kerusakan Software dan Hardware"
                      }
                    </div>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__uuLbb)}
                  />
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__bd0Pk)} />
            </p.Stack>
          </p.Stack>
          <Section
            data-plasmic-name={"tentangsection"}
            data-plasmic-override={overrides.tentangsection}
            className={classNames("__wab_instance", sty.tentangsection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lCbya)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___0GIyg)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__eEtP
                  )}
                >
                  {"Butuh Servis HP di Pekalongan ? Dekacell Aja !"}
                </h2>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___86QIe
                )}
              >
                {
                  "DekaCell merupakan spesialis DekaCell, solusi tepat untuk permasalahan HP Android Anda di Pekalongan dan Sekitarnya. Dengan tenaga ahli yang berpengalaman dan terpercaya, kami siap membantu Anda memperbaiki berbagai kerusakan HP Android Anda dengan garansi uang kembali"
                }
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__wLjUf)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bQrsw)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__wgIvD)}
                  description={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wMn1
                      )}
                    >
                      {
                        "Berikut adalah beberapa jenis kerusakan hardware HP Android yang dapat ditangani oleh DekaCell Pekalongan :\n\nHP tidak keluar suara\nIC Power rusak\nIC Sinyal rusak\nIC Charger rusak\nKonektor Charger rusak\nTouchscreen bergerak sendiri / layar blank / dan masalah LCD lainnya\nPort headset tidak berfungsi\nGanti tombol power HP"
                      }
                    </div>
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__hle)}
                      role={"img"}
                    />
                  }
                  title={"Kerusakan Hardware"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__vys0J)}
                  description={
                    "Berikut adalah beberapa jenis kerusakan Software HP Android yang dapat ditangani oleh DekaCell Pekalongan :\n\nHP sering hang atau macet\nHP sering update sendiri\nSinyal HP tidak keluar\nInternet sering disconnect sendiri\nRAM HP penuh\nMemori HP penuh\nAda notifikasi mengganggu\nAda iklan muncul\n"
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__np1Iw)}
                      role={"img"}
                    />
                  }
                  title={"Kerusakan Software"}
                />
              </p.Stack>
              <KolomKontak
                className={classNames("__wab_instance", sty.kolomKontak__cKtZl)}
              />
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"checkpointsSection"}
            data-plasmic-override={overrides.checkpointsSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.checkpointsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__ndF0O)}
              id={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? ("features" as const)
                  : ("features" as const)
              }
            >
              <div className={classNames(projectcss.all, sty.column___8EZki)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__eAfRj)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0OI
                    )}
                  >
                    {"Kenapa Servis HP di DekaCell Pekalongan"}
                  </div>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__c0DAm
                    )}
                  >
                    {"Servis HP Terbaik di Pekalongan"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___76R5O
                    )}
                  >
                    {
                      "DekaCell merupakan servis HP terbaik di Pekalongan dari segi Kualitas dan Mutu Pengerjaan "
                    }
                  </div>
                  <Button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__qDoZh)}
                        role={"img"}
                      />
                    }
                    flat={true}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Pys9
                      )}
                    >
                      {"Learn more"}
                    </div>
                  </Button>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__zal4C)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___6WAin)}
                >
                  <ListItem
                    bottomBorder={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("dark" as const)
                        : ("dark" as const)
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___5YxCj
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__cHrYl)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5IWz
                      )}
                    >
                      {"Teknisi HP Berpengalaman"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__f3Oll
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__doGwA)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iX94G
                      )}
                    >
                      {"Menangani Berbagai Macam Jenis HP"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__ywYvi
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__debJz)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pgXt9
                      )}
                    >
                      {"100% Jaminan Kualitas Servis HP"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark" as const}
                    className={classNames("__wab_instance", sty.listItem__aAb)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__xvdo4)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2O8C3
                      )}
                    >
                      {"Bisa ditunggu untuk kerusakan ringan"}
                    </div>
                  </ListItem>
                  <ListItem
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__pCkaf
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__mOvli)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qDTz
                      )}
                    >
                      {"Pelayanan Bersahabat"}
                    </div>
                  </ListItem>
                </div>
              </div>
            </p.Stack>
          </Section>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__y7)}
          >
            <div className={classNames(projectcss.all, sty.column__uxEwf)}>
              <h3
                data-plasmic-name={"h3"}
                data-plasmic-override={overrides.h3}
                className={classNames(
                  projectcss.all,
                  projectcss.h3,
                  projectcss.__wab_text,
                  sty.h3
                )}
              >
                {"Lokasi DeKaCell Pekalongan"}
              </h3>
              <address
                data-plasmic-name={"address"}
                data-plasmic-override={overrides.address}
                className={classNames(
                  projectcss.all,
                  projectcss.address,
                  sty.address
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___58Ysa
                  )}
                >
                  {
                    "Pertigaan Jalan Raya Tangkil Tengah, Kedungwuni Belakang Alfamart\n\n"
                  }
                </div>
              </address>
              <KolomKontak
                className={classNames("__wab_instance", sty.kolomKontak__yyWWl)}
              />
            </div>
            <div className={classNames(projectcss.all, sty.column__ujZa)}>
              <Embed
                data-plasmic-name={"embedHtml"}
                data-plasmic-override={overrides.embedHtml}
                className={classNames("__wab_instance", sty.embedHtml)}
                code={
                  '<iframe src="https://www.google.com/maps/embed?pb=!1m17!1m12!1m3!1d3960.533892075854!2d109.63854871477294!3d-6.946170494981501!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m2!1m1!2zNsKwNTYnNDYuMiJTIDEwOcKwMzgnMjYuNyJF!5e0!3m2!1sid!2sid!4v1689508298147!5m2!1sid!2sid" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>' as const
                }
              />
            </div>
          </p.Stack>
          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            background={"dark" as const}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__f4C1I)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xdyU)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__dTu46)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gQiH8
                    )}
                  >
                    {"Promo Servis HP"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xpMKi
                  )}
                >
                  {
                    "Selamat anda yang membaca ini, berhak mendapat promo FREE KONSULTASI harga servis HP di Pekalongan terbaik ! Silahkan hubungi / Chat dibawah"
                  }
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__ssQj)}
              >
                <div className={classNames(projectcss.all, sty.column__pd8Ct)}>
                  {true ? (
                    <PriceCard
                      borders={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? []
                          : ["flatRight"]
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard__sV6FY
                      )}
                      description={
                        <React.Fragment>
                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp___6HoEz
                            )}
                            description={
                              "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                            }
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jLj3J
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__vytGl
                            )}
                            description={"Mus consequat a justo"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tYk0Y
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />
                        </React.Fragment>
                      }
                    />
                  ) : null}
                </div>
                <div className={classNames(projectcss.all, sty.column__jrtPk)}>
                  <PriceCard
                    borders={[]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__vuDjd
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__wjLsw
                          )}
                          description={"HP tidak keluar suara\n"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__h1HXb
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__woRqo
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__pGfzm
                              )}
                            >
                              {
                                "IC Power rusak\nIC Sinyal rusak\nIC Charger rusak\n"
                              }
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__o6Is
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__m7DM
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xIsmC
                              )}
                            >
                              {"Konektor Charger rusak"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__v8EeH
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___2YWbB
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oxQ5O
                              )}
                            >
                              {
                                "Touchscreen bergerak sendiri / layar blank / dan masalah LCD lainnya"
                              }
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mWdbZ
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__aDuTn
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fAozl
                              )}
                            >
                              {"Colokan Headset tidak berfungsi"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ztmWm
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___6P3Rj
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cyWx1
                              )}
                            >
                              {"Tombol Power Rusak"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sxjBu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ButtonWa
                          className={classNames(
                            "__wab_instance",
                            sty.buttonWa__t9C93
                          )}
                        />
                      </React.Fragment>
                    }
                    dollars={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f5Dgv
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Konsultasi Gratis"
                          : "Konsultasi Kerusakan Hardware"}
                      </div>
                    }
                    label={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Kerusakan Hardware"
                        : "Kerusakan Hardware"
                    }
                    primary={true}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__zDbj3)}>
                  <PriceCard
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatLeft"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___1MUol
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__biJhJ
                          )}
                          description={
                            "HP sering hang atau macet\nHP sering update sendiri\nSinyal HP tidak keluar\nInternet sering disconnect sendiri\nRAM HP penuh\nMemori HP penuh\nAda notifikasi mengganggu\nAda iklan muncul"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cM7V
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ButtonWa
                          className={classNames(
                            "__wab_instance",
                            sty.buttonWa__jcdH
                          )}
                        />
                      </React.Fragment>
                    }
                    dollars={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Konsultasi Gratis"
                        : "Konsultasi Kerusakan Software"
                    }
                    label={"Kerusakan Software"}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"shopBannersSection"}
            data-plasmic-override={overrides.shopBannersSection}
            className={classNames("__wab_instance", sty.shopBannersSection)}
            size={"fullContentWidth" as const}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rnvh2)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kwfWf)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__fOgnW)}
                  image={{
                    src: "/plasmic/deka_cell/images/_3475458232364821190181355126969670401930977Njpg.jpg",
                    fullWidth: 940,
                    fullHeight: 788,
                    aspectRatio: undefined
                  }}
                />

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.PlasmicImg
                    data-plasmic-name={"img"}
                    data-plasmic-override={overrides.img}
                    alt={""}
                    className={classNames(sty.img)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/_34777482616548875416206324846814292638739147Njpg.jpg",
                      fullWidth: 940,
                      fullHeight: 788,
                      aspectRatio: undefined
                    }}
                  />
                ) : null}
                <Banner
                  className={classNames("__wab_instance", sty.banner__kmXq0)}
                  image={{
                    src: "/plasmic/deka_cell/images/shirtWoman.png",
                    fullWidth: 1834,
                    fullHeight: 2751,
                    aspectRatio: undefined
                  }}
                />
              </p.Stack>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"testimonialsSection"}
            data-plasmic-override={overrides.testimonialsSection}
            background={"gray" as const}
            className={classNames("__wab_instance", sty.testimonialsSection)}
          >
            <h4
              data-plasmic-name={"h4"}
              data-plasmic-override={overrides.h4}
              className={classNames(
                projectcss.all,
                projectcss.h4,
                projectcss.__wab_text,
                sty.h4
              )}
            >
              {"Testimony"}
            </h4>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__akp2S)}
            >
              <div className={classNames(projectcss.all, sty.column___7SIn)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__jA0Wh
                  )}
                  image={{
                    src: "/plasmic/deka_cell/images/tracy.png",
                    fullWidth: 500,
                    fullHeight: 500,
                    aspectRatio: undefined
                  }}
                  name={"Bambang"}
                  quote={
                    "terima kasih mas dekacell, hp saya yang sering gagal dices, udah bisa dicas lagi sekarang"
                  }
                  title={"PNS "}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column___94Ojq)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial___8Qmns
                  )}
                  image={{
                    src: "/plasmic/deka_cell/images/elaine.png",
                    fullWidth: 460,
                    fullHeight: 280,
                    aspectRatio: undefined
                  }}
                  name={"Iriana"}
                  quote={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7HCpQ
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            '"Awalnya cuman coba ngechat, ternyata responnya cepat, hasil servis oke. hp saya tadinya minta ganti Layar ,'
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {" ternyata di sini murah banget"}
                        </span>
                        <React.Fragment>{" makasih dekacell"}</React.Fragment>
                      </React.Fragment>
                    </div>
                  }
                  title={"Ibu Rumah Tangga"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__bzIEk)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__scTb2
                  )}
                  image={{
                    src: "/plasmic/deka_cell/images/louis.jpg",
                    fullWidth: 2249,
                    fullHeight: 3000,
                    aspectRatio: undefined
                  }}
                  name={"Anang Sandjaya ( A San )"}
                  quote={
                    "Oke banget servis hp di sini, meski sederhana tapi perbaikan cepat dan hasil juga oke saya gak bingung kalo mau ganti sparepart hp\nmakasih dekacell"
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qzFpx
                      )}
                    >
                      {"Wiraswasta"}
                    </div>
                  }
                />
              </div>
            </p.Stack>
          </Section>
          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: "/plasmic/deka_cell/images/_3475458232364821190181355126969670401930977Njpg.jpg",
              fullWidth: 940,
              fullHeight: 788,
              aspectRatio: undefined
            }}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__d937C)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vffLt
                )}
              >
                {"Chat aja atau datang ke lokasi"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kLLcX
                )}
              >
                {"Ayo Ngobrol tentang masalah HP anda :)"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3BBap
                )}
              >
                {
                  "Kami di DekaCell siap membantu Anda memperbaiki berbagai kerusakan pada HP Android Anda. Dengan tenaga ahli yang berpengalaman dan terpercaya, kami menawarkan solusi tepat untuk permasalahan HP Android Anda. Kami juga memberikan garansi uang kembali untuk memastikan kepuasan pelanggan. Terima kasih telah mempercayakan kami untuk memperbaiki HP Android Anda."
                }
              </div>
              <KolomKontak
                className={classNames("__wab_instance", sty.kolomKontak__c8UPz)}
              />
            </p.Stack>
          </CallToActionSection>
          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "tentangsection",
    "checkpointsSection",
    "button",
    "h3",
    "address",
    "embedHtml",
    "pricingSection",
    "shopBannersSection",
    "img",
    "testimonialsSection",
    "h4",
    "callToActionSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar"],
  navbar: ["navbar"],
  tentangsection: ["tentangsection"],
  checkpointsSection: ["checkpointsSection", "button"],
  button: ["button"],
  h3: ["h3"],
  address: ["address"],
  embedHtml: ["embedHtml"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection", "img"],
  img: ["img"],
  testimonialsSection: ["testimonialsSection", "h4"],
  h4: ["h4"],
  callToActionSection: ["callToActionSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  tentangsection: typeof Section;
  checkpointsSection: typeof Section;
  button: typeof Button;
  h3: "h3";
  address: "address";
  embedHtml: typeof Embed;
  pricingSection: typeof Section;
  shopBannersSection: typeof Section;
  img: typeof p.PlasmicImg;
  testimonialsSection: typeof Section;
  h4: "h4";
  callToActionSection: typeof CallToActionSection;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    tentangsection: makeNodeComponent("tentangsection"),
    checkpointsSection: makeNodeComponent("checkpointsSection"),
    button: makeNodeComponent("button"),
    h3: makeNodeComponent("h3"),
    address: makeNodeComponent("address"),
    embedHtml: makeNodeComponent("embedHtml"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    img: makeNodeComponent("img"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    h4: makeNodeComponent("h4"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "DekaCell : Servis HP Pekalongan",
      description:
        "Servis HP Pekalongan menangani servis Hardware dan Software HP di Pekalongan. Bisa ditunggu untuk kerusakan sederhana",
      ogImageSrc:
        "https://site-assets.plasmic.app/5f2806c24456e3a0067d3cca570fa287.jpg",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
