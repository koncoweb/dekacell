// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5W4T71ZWGdu6kYqLvuuQ3N
// Component: PIO5vM9nFXA9SKL

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: E68qrDQCcYGuytT/component
import ValueProp from "../../ValueProp"; // plasmic-import: bjiW3HuNh1M7Jjd/component
import KolomKontak from "../../KolomKontak"; // plasmic-import: yBAyndXdAN/component
import FooterSection from "../../FooterSection"; // plasmic-import: nGsC6Y1BsR3DqYF/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_deka_cell.module.css"; // plasmic-import: 5W4T71ZWGdu6kYqLvuuQ3N/projectcss
import sty from "./PlasmicServices.module.css"; // plasmic-import: PIO5vM9nFXA9SKL/css

export type PlasmicServices__VariantMembers = {};
export type PlasmicServices__VariantsArgs = {};
type VariantPropType = keyof PlasmicServices__VariantsArgs;
export const PlasmicServices__VariantProps = new Array<VariantPropType>();

export type PlasmicServices__ArgsType = {};
type ArgPropType = keyof PlasmicServices__ArgsType;
export const PlasmicServices__ArgProps = new Array<ArgPropType>();

export type PlasmicServices__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  foreground2?: p.Flex<"dl">;
  foreground4?: p.Flex<"div">;
  foreground5?: p.Flex<"div">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultServicesProps {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicServices__RenderFunc(props: {
  variants: PlasmicServices__VariantsArgs;
  args: PlasmicServices__ArgsType;
  overrides: PlasmicServices__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState({});

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicServices.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicServices.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicServices.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___7A1Wp)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Layanan Kami"}
              </h1>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__eRly1
                )}
              >
                {"Kerusakan Hardware"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0PGkO
                )}
              >
                {
                  "Kami DekaCell Pekalongan memperbaiki beberapa masalah kerusakan hardware HP di Pekalongan seperti"
                }
              </div>
            </p.Stack>
            <p.Stack
              as={"dl"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp__tXoae)}
                description={
                  "Masalah ini dapat disebabkan oleh beberapa faktor seperti volume yang terlalu rendah, speaker yang rusak, atau masalah pada software. Untuk memperbaikinya, Anda dapat mencoba mengatur ulang volume atau melakukan reset pada HP Anda. Jika masalah masih berlanjut, sebaiknya Anda membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___6Cb4I)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/chart.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"Servis HP tidak keluar suara : "}
              />

              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp__gyVa8)}
                description={
                  "Servis IC Power HP rusak di Pekalongan : IC Power adalah komponen yang bertanggung jawab untuk mengatur daya listrik pada HP. Jika IC Power rusak, maka HP Anda tidak akan bisa dinyalakan. Untuk memperbaikinya, Anda perlu membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__j978Y)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/sparkle.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"IC Power rusak"}
              />

              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp__w2BlK)}
                description={
                  "Perbaikan IC Sinyal rusak: Jika IC Sinyal rusak, maka HP Anda tidak akan bisa menerima sinyal dari jaringan seluler. Untuk memperbaikinya, Anda perlu membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__cju7N)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/chart.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"IC Sinyal rusak"}
              />

              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp___3LDpc)}
                description={
                  "IC Charger rusak: Ciri - ciri : bila charger anda bekerja dengan baik namun HP tidak mau terisi saat di charge . Jika IC Charger rusak, maka HP Anda tidak akan bisa diisi daya. Untuk memperbaikinya, Anda perlu membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qrTr)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/sparkle.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"IC Charger rusak"}
              />

              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp___4Sxtj)}
                description={
                  "Konektor Charger rusak: Jika konektor charger rusak, maka HP Anda tidak akan bisa diisi daya. Untuk memperbaikinya, Anda perlu membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___1NZaI)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/chart.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"Konektor Charger / Cas"}
              />

              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp__kkvFp)}
                description={
                  "Kami juga bisa menservis Touchscreen bergerak sendiri / layar blank / dan masalah LCD lainnya: Masalah ini dapat disebabkan oleh beberapa faktor seperti kerusakan pada layar sentuh atau LCD. Untuk memperbaikinya, Anda perlu membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__iAap)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/chart.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"Layar sentuh bergerak sendiri"}
              />

              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp__y6MM8)}
                description={
                  "Port headset tidak berfungsi: Masalah ini dapat disebabkan oleh beberapa faktor seperti kotoran atau debu yang menumpuk di dalam port headset atau kerusakan pada port headset itu sendiri. Untuk memperbaikinya, Anda dapat mencoba membersihkan port headset dengan hati-hati atau membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__dzUhL)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/chart.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"Port / Lubang colokan Headset Rusak"}
              />

              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp___9E9PI)}
                description={
                  "Ganti tombol power HP: Masalah ini dapat disebabkan oleh kerusakan pada tombol power itu sendiri. Untuk memperbaikinya, Anda perlu membawa HP Anda ke service center terdekat untuk diperbaiki."
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__oioQi)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/chart.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"Tombol power tidak bisa dipencet"}
              />

              <KolomKontak
                className={classNames("__wab_instance", sty.kolomKontak__iti4M)}
              />
            </p.Stack>
          </p.Stack>
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___5Xh8H)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground4"}
              data-plasmic-override={overrides.foreground4}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground4)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___0Eeey
                )}
              >
                {"Kerusakan Software"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__u6Hr8
                )}
              >
                {
                  "Kami juga bisa membantu memperbaiki kerusakan Software HP android anda"
                }
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground5"}
              data-plasmic-override={overrides.foreground5}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground5)}
            >
              <ValueProp
                card={true}
                className={classNames("__wab_instance", sty.valueProp__pZjMy)}
                description={
                  "HP sering hang atau macet\nHP sering update sendiri\nSinyal HP tidak keluar\nInternet sering disconnect sendiri\nRAM HP penuh\nMemori HP penuh\nAda notifikasi mengganggu\nAda iklan muncul"
                }
                icon={
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__l0I6D)}
                    displayHeight={"56px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"56px" as const}
                    src={{
                      src: "/plasmic/deka_cell/images/chart.png",
                      fullWidth: 144,
                      fullHeight: 144,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={"Kerusakan Software yang ditangani DeKaCell"}
              />
            </p.Stack>
          </p.Stack>
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__icBva)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___0VJ9H)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__mki28
                    )}
                  >
                    {"Hubungi Kami"}
                  </h2>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oFj0S
                  )}
                >
                  {"Kami bantu kembalikan HP Anda ke Kondisi Prima"}
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eE09R)}
              >
                <KolomKontak
                  className={classNames(
                    "__wab_instance",
                    sty.kolomKontak___42Lr5
                  )}
                />
              </p.Stack>
            </p.Stack>
          </section>
          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "h1",
    "foreground2",
    "foreground4",
    "foreground5",
    "section",
    "foreground3",
    "footerSection"
  ],
  navbar: ["navbar"],
  foreground: ["foreground", "h1"],
  h1: ["h1"],
  foreground2: ["foreground2"],
  foreground4: ["foreground4"],
  foreground5: ["foreground5"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  h1: "h1";
  foreground2: "dl";
  foreground4: "div";
  foreground5: "div";
  section: "section";
  foreground3: "div";
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicServices__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicServices__VariantsArgs;
    args?: PlasmicServices__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicServices__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicServices__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicServices__ArgProps,
          internalVariantPropNames: PlasmicServices__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicServices__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicServices";
  } else {
    func.displayName = `PlasmicServices.${nodeName}`;
  }
  return func;
}

export const PlasmicServices = Object.assign(
  // Top-level PlasmicServices renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    h1: makeNodeComponent("h1"),
    foreground2: makeNodeComponent("foreground2"),
    foreground4: makeNodeComponent("foreground4"),
    foreground5: makeNodeComponent("foreground5"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicServices
    internalVariantProps: PlasmicServices__VariantProps,
    internalArgProps: PlasmicServices__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Services",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicServices;
/* prettier-ignore-end */
